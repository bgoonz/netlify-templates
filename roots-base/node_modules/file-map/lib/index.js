// Generated by CoffeeScript 1.7.0
(function() {
  var W, compact, file_map, fs, mm, node, path, relative, root;

  W = require('when');

  node = require('when/node');

  fs = node.liftAll(require('fs'));

  path = require('path');

  mm = require('minimatch');

  compact = require('lodash.compact');

  root = null;

  module.exports = file_map = function(dir, opts) {
    var dir_ignores, file_ignores;
    if (opts == null) {
      opts = {};
    }
    dir = path.resolve(dir);
    if (root == null) {
      root = dir;
    }
    file_ignores = compact(Array.prototype.concat(opts.file_ignores));
    dir_ignores = compact(Array.prototype.concat(opts.directory_ignores));
    return fs.readdir(dir).then(function(files) {
      return W.map(files, function(f) {
        var full_path;
        full_path = path.join(dir, f);
        return fs.stat(full_path).then(function(stat) {
          var ignore, rel, _i, _j, _len, _len1;
          if (stat.isDirectory()) {
            rel = relative(full_path);
            for (_i = 0, _len = dir_ignores.length; _i < _len; _i++) {
              ignore = dir_ignores[_i];
              if (mm(rel, ignore)) {
                return false;
              }
            }
            return file_map(full_path, opts).then(function(res) {
              return {
                type: 'directory',
                path: rel,
                full_path: full_path,
                stat: stat,
                children: res
              };
            });
          } else {
            rel = relative(full_path);
            for (_j = 0, _len1 = file_ignores.length; _j < _len1; _j++) {
              ignore = file_ignores[_j];
              if (mm(rel, ignore)) {
                return false;
              }
            }
            return {
              type: 'file',
              path: rel,
              full_path: full_path,
              stat: stat
            };
          }
        });
      }).then(compact);
    });
  };

  relative = function(full_path) {
    return full_path.replace(root + path.sep, '');
  };

}).call(this);
